@use 'sass:color';
@use 'open-props-scss' as op;
@use './tokens.scss' as tokens;

@mixin fully-clickable {
	position: relative;
	
	:global(a)::before {
		content: '';
		inset: 0;
		position: absolute;
	}
}

@mixin cta {
	background-color: color.scale(tokens.$teal-9, $lightness: -10%);
	border: none;
	border-radius: op.$radius-2;
	box-shadow: var(--shadow);
	color: tokens.$teal-0;
	font-weight: op.$font-weight-7;
	padding-inline: op.$size-3;
	padding-block: op.$size-2;
	transition: background-color 0.2s ease-in-out;
	text-decoration: none;

	display: flex;
	align-items: center;
	gap: op.$size-2;
	
	&:hover {
		background-color: tokens.$teal-10;
	}

	svg {
		display: inline;
		height: 1rem;
		opacity: 0.8;
	}

	@media (forced-colors: active) {
		outline: 1px solid LinkText;
	}
}

@keyframes button-loading-spinner {
    from {
        transform: rotate(0turn);
    }

    to {
        transform: rotate(1turn);
    }
}

@mixin with-loading-spinner {
	position: relative;

	&[data-state="loading"] {
		.contents {
			visibility: hidden;
		}

		&::after {
			content: '';
			position: absolute;
			width: 1.5rem;
			height: 1.5rem;
			inset: 0;
			margin: auto;
			border: 4px solid transparent;
			border-top-color: currentColor;
			border-left-color: currentColor;
			opacity: 0.7;
			border-radius: 50%;
			animation: button-loading-spinner 1s ease infinite;
		}
	}
}

@mixin forced-colors-fill-current-color {
	@media (forced-colors: active) {
		fill: currentColor;
	}
}
  
  
@mixin forced-colors-outline {
	@media (forced-colors: active) {
		outline: 2px solid currentColor;
	}
}
  
  // USE WITH CARE!! Only use if you know something must be a light color and can't be forced to a system color, and you need a background so it will stand out
@mixin forced-colors-background {
	@media (forced-colors: active) {
		forced-color-adjust: none;
		background: rgba(0, 0, 0, 0.6) !important;
	}
}
  
@mixin forced-colors-hidden {
	@media (forced-colors: active) {
		display: none;
	}
}