@use 'sass:color';
@use 'sass:math';
@use 'open-props-scss' as op;
@use './tokens.scss' as *;
@import './mixins.scss';

@mixin required-indicator() {
	position: relative;

	&::after {
		$character: '*';
        $character-svg: url('data:image/svg+xml;utf8,<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><text fill="currentColor" x="50%" y="100%" font-family="system-ui" text-anchor="middle">#{$character}</text></svg>');

        content: '';
        -webkit-mask-image: $character-svg;
        mask: $character-svg no-repeat center;
        background-color: op.$pink-9;
        position: absolute;
        right: -0.85em;
        top: 0.1rem;
        font-size: inherit;
        width: 1em;
        height: 1em;

         // forced-color-adjust: preserve-parent-color;
       @media (forced-colors: active) {
         // background-color: currentColor;
         background-color: Highlight;
       }
	}
}

:root {
	accent-color: $teal-9;
}

form {
	display: flex;
	flex-direction: column;
	gap: op.$size-3;
	margin-inline: auto;

	[data-field] {
		display: flex;
		flex-direction: column;
		max-width: 100%;

		& > input {
			padding-block: 6.5px;
		}
	}

	[type="submit"] {
		@include cta();
		@include with-loading-spinner();
		width: max-content;
		margin-inline: auto;
	}

	input, select, textarea {
		background-color: var(--card-surface);
		border: 1px solid op.$stone-7;
		border-radius: op.$radius-2;
		padding-block: math.div(op.$size-2, 2);
		padding-inline: op.$size-3;

		&:focus-visible {
			outline-offset: 0;
		}

		&:disabled {
			background-color: op.$stone-3;
			color: op.$gray-6;
		}

		&::placeholder {
			color: color.mix(op.$gray-6, op.$gray-7, $weight: 55%);
		}
	}

	label,
	legend {
		font-size: op.$font-size-1;
		font-weight: op.$font-weight-7;
		max-width: fit-content;

		&:has(+ :required),
		&:has(+ * :required),
		&:has(+ [aria-required]),
		&:has(+ * [aria-required]) {
			@include required-indicator();
		}

		&.inline-label {
			font-weight: op.$font-weight-4;
			display: flex;
			gap: op.$size-2;
			padding-block: 8px;
		}
	}

	.error-message {
		display: block;
		color: op.$pink-9;
		font-weight: op.$font-weight-7;
		min-height: 1.5rem;

		&:empty {
			visibility: hidden;
		}
	}

	.row {
		display: flex;
		flex-direction: row;
		gap: op.$size-5;
		width: 100%;

		@media (max-width: 1024px) {
			flex-direction: column;
			gap: op.$size-1;

			[data-field] {
				width: 100%;
			}
		}
	}

	.svelte-select {
		&.focused {
			border: 1px solid transparent !important;
			outline: var(--border-focused);
		}

		--background: var(--card-surface);
		--border: 1px solid #{op.$stone-7};
		--border-hover: 1px solid #{op.$stone-7};
		--border-focused: 3px solid #{$teal-8};
		--font-size: 18px;
		--multi-select-input-margin: 0;

		.chevron {
			cursor: pointer;
		}

		.value-container {
			width: calc(100% - 1.5ch);
		}

		.indicators {
			align-items: flex-start !important;
		}
		
		.svelte-select,
		.multi-item,
		.list-item,
		.item {
			cursor: pointer !important;
		}
	}
}

[type="checkbox"] {
	width: op.$size-4;

	&:focus-visible {
		outline-offset: -3px !important;
		outline-width: 4px;
		border-radius: 10%;
	}
}

.multi-month-select {
	display: flex;
	flex-wrap: wrap;
	gap: op.$size-2;

	[data-month] {
		@include button();
		padding-inline: 0.75rem;

		&[aria-pressed="true"]:not(:hover) {
			background-color: $teal-9;
			color: $teal-0;
		}
	}
}

fieldset {
	border: 0;
}

textarea {
	height: 12rem;
    min-height: 8rem;
    max-height: 24rem;
}

[type="date"] {
	@media (max-width: 1024px) {
		min-width: 95%;
	}
}