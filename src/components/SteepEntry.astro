---
import type { WithId } from 'mongodb';
import { Icon, Sprite } from 'astro-icon';
import i18next, {t} from 'i18next';
import { getBrandById } from '../api/brands';
import type { Brand, Steep, Tea } from '../types/api';
import { sluggify } from '../utils/slug';
import Detail from './Detail.astro';
import DetailsGrid from './DetailsGrid.astro';
import PreparationDetails from './PreparationDetails.astro';
import StaticRating from './StaticRating.astro';
import SteepEntryAmount from './SteepEntryAmount.astro';
import AddinDetails from './AddinDetails.astro';
import EllipsisWithDropdownMenu from './EllipsisWithDropdownMenu.astro';

export interface Props {
	highlightTea: boolean;
	steep: WithId<Steep>;
	tea: WithId<Tea>;
}

const {steep, tea, highlightTea} = Astro.props;
let brand: WithId<Brand> | null;
let teaUrl: URL | undefined;

if (highlightTea) {
	brand = await getBrandById(tea.vendor);
	if (brand) {
		const brandSlug = sluggify(brand.name);
		const teaSlug = sluggify(tea.name);
		teaUrl = new URL(`/teas/${brandSlug}/${teaSlug}/`, Astro.url);
	}
}

const isFavoriteSteep = tea.favoriteSteep?.toString() === steep._id.toString();
const usedAnySweetener = (!!steep.addins?.length) || [steep.usedCreamer, steep.usedHoney, steep.usedSweetener].includes('Yes');
---

<article id={`steep-${steep._id}`}>
	<EllipsisWithDropdownMenu>
		<>
		<li>
			<Sprite
				aria-hidden="true"
				focusable="false"
				name="mdi:pencil"
			/>
			<a href="/">
				Edit
			</a>
		</li>
		<li>
			{
				isFavoriteSteep ?
					<>
						<Sprite
							aria-hidden="true"
							focusable="false"
							name="ion:heart-dislike"
						/>
						<a href="/">
							Unfavorite
						</a>
					</> :
					<>
						<Sprite
							aria-hidden="true"
							focusable="false"
							name="ion:heart"
						/>
						<a href="/">
							Favorite
						</a>
					</>
			}
		</li>
		<li>
			<Sprite
				aria-hidden="true"
				focusable="false"
				name="ion:duplicate"
			/>
			<a href="/">
				Duplicate
			</a>
		</li>
		<li class="danger">
			<Sprite
				aria-hidden="true"
				focusable="false"
				name="ion:trash-sharp"
			/>
			<a href="/">
				Delete
			</a>
		</li>
		</>
	</EllipsisWithDropdownMenu>
	<p class="title">
		{(highlightTea && !!teaUrl) ?
			<a href={teaUrl}>{tea.name}</a> :
			<time datetime={steep.date.toISOString()}>
				{steep.date.toLocaleDateString(i18next.language, {month: 'short', day: 'numeric', year: 'numeric'})}
			</time>
		}
		{isFavoriteSteep && <Icon pack="fa-solid" name="heart" focusable="false" aria-label="Favorited" />}
	</p>
	<DetailsGrid minimumDetailWidth="20ch">
		<Detail name={t('steepDetails.amounts', 'Amounts')}>
			<SteepEntryAmount
				format={steep.format}
				teabags={steep.numTeabags}
				teaspoons={steep.amountOfLooseLeafTeaInTeaspoons}
				water={steep.amountOfWaterInOunces}
			/>
		</Detail>
		<Detail name={t('steepDetails.preparation', 'Preparation')}>
			<PreparationDetails
				steepTime={steep.steepTime}
				degreesFahrenheit={steep.degreesFahrenheit}
				hotOrIced={steep.hotOrIced}
			/>
		</Detail>
		{usedAnySweetener && (
			<Detail name={t('steepDetails.addins')}>
				<AddinDetails {...steep} />
			</Detail>
		)}
		{Number(steep.reinfusions) > 0 && (
			<Detail name={t('steepDetails.reinfusions', 'Reinfusions')}>
				{steep.reinfusions} {Number(steep.reinfusions) === 1 ? ' time' : ' times'}
			</Detail>
		)}
		{!!steep.rating && (
			<Detail name={t('steepDetails.rating', 'Rating')}>
				<StaticRating rating={steep.rating} />
			</Detail>
		)}
		{!!steep.preparationNotes && (
			<Detail name={t('steepDetails.notes', 'Notes')}>
				{steep.preparationNotes}
			</Detail>
		)}
	</DetailsGrid>
	{steep.review && <p class="review">{steep.review}</p>}
</article>

<style lang="scss">
	@use 'open-props-scss' as op;
	@use '../styles/tokens.scss' as tokens;

	@keyframes quick-flash {
		0% {
			background-color: op.$green-1;
		}
		100% {
			background-color: inherit;
		}
	}

	article {
		background-color: var(--card-surface);
		border-radius: op.$radius-2;
		box-shadow: var(--shadow);
		border: 1px solid op.$gray-2;
		color: var(--ink);
		padding: op.$size-3;

		&:target {
			scroll-margin-block-start: op.$size-9;
			animation: 3s quick-flash;
		}

		& > :global(*:not(:first-child)) {
			margin-block-start: op.$size-4;
		}

		@media print {
			border: none;
			padding: 0;
		}
	}

	.title {
		font-size: op.$font-size-3;
		font-weight: op.$font-weight-7;
		margin-block-start: 0 !important;

		svg {
			display: inline;
			height: op.$font-size-3;
			color: op.$pink-7;
			margin-inline-start: op.$size-1;
		}
	}

	:global(.ellipsis-menu) {
		float: right;
		// margin-block-start: -3.5rem;
		margin-inline-end: -1.25rem;
		position: relative;
	}

	.review {
		color: op.$gray-9;
	}
</style>