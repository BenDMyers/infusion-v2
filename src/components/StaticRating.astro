---
import type { Rating, WithEmptyStringOption } from '../types/api';
import {Sprite} from 'astro-icon';

export interface Props {
	rating: WithEmptyStringOption<Rating>
}

const {rating} = Astro.props;
const ratingAsNumber = Number(rating);

let screenreaderDescription = `${rating} stars`;
if (rating === '') {
	screenreaderDescription = 'Unrated';
} else if (rating === '1') {
	screenreaderDescription = '1 star';
}

const five = new Array(5).fill('');
---

<>
	<span class="visually-hidden">{screenreaderDescription}</span>
	<div class="stars" aria-hidden="true">
		{five.map((_, index) => (
			<Sprite
				pack="fa-solid"
				name="star"
				class:list={[{star: true, active: index + 1 <= ratingAsNumber}]}
			/>
		))}
	</div>
</>

<style lang="scss">
	@use 'open-props-scss' as op;

	.stars {
		display: flex;
		gap: op.$size-1;
		margin-block-start: op.$size-1;
		width: fit-content;
	}

	.star {
		color: op.$stone-5;
		height: op.$font-size-1;
		width: op.$font-size-1;

		@media print {
			color: op.$stone-0;
		}

		&.active {
			color: var(--ink);
		}
	}
</style>